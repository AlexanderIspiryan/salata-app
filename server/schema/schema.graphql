schema {
  query: RootQueryType
  mutation: Mutation
}

type RootQueryType {
  orders: [OrderType]
}

type OrderType {
  id: ID
  client: ClientType
  dueTime: Int
  isTakeout: Boolean
  items: [ItemType]
  orderNumber: Int
  startTime: Int
  status: StatusType
}

type ClientType {
  id: ID
  name: String
  phoneNumber: String
}

type ItemType {
  id: ID
  ingredients: [IngredientType]
  extra: [IngredientType]
  additionalInformation: String
  name: String
  audio: [AudioType]
  quantity: Int
}

type IngredientType {
  id: ID
  name: String
}

type AudioType {
  id: ID
  data: String
  language: String
  delay: Int
}

enum StatusType {
  NOT_STARTED
  IN_PROGRESS
  COMPLETED
}

type Mutation {
  addOrder(input: input): OrderType
  addItems(id: String, ingredients: [ID], extra: String, additionalInformation: String, name: String, audio: String, quantity: Int): OrderType
  addIngredients(id: String, name: String, items: [ID]): OrderType
  updateOrderStatus(id: ID, status: StatusType): OrderType
}

input input {
  clientId: String
  dueTime: String
  isTakeout: Boolean
  itemsId: [ID]
  startTime: String
  status: StatusType
}
